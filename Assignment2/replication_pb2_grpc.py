# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import replication_pb2 as replication__pb2


class ReplicationStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.sync = channel.unary_stream(
        '/Replication/sync',
        request_serializer=replication__pb2.ReplicationRequest.SerializeToString,
        response_deserializer=replication__pb2.ReplicationResponse.FromString,
        )
    self.put = channel.unary_unary(
        '/Replication/put',
        request_serializer=replication__pb2.Request.SerializeToString,
        response_deserializer=replication__pb2.Response.FromString,
        )
    self.delete = channel.unary_unary(
        '/Replication/delete',
        request_serializer=replication__pb2.Request.SerializeToString,
        response_deserializer=replication__pb2.Response.FromString,
        )


class ReplicationServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def sync(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def put(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReplicationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'sync': grpc.unary_stream_rpc_method_handler(
          servicer.sync,
          request_deserializer=replication__pb2.ReplicationRequest.FromString,
          response_serializer=replication__pb2.ReplicationResponse.SerializeToString,
      ),
      'put': grpc.unary_unary_rpc_method_handler(
          servicer.put,
          request_deserializer=replication__pb2.Request.FromString,
          response_serializer=replication__pb2.Response.SerializeToString,
      ),
      'delete': grpc.unary_unary_rpc_method_handler(
          servicer.delete,
          request_deserializer=replication__pb2.Request.FromString,
          response_serializer=replication__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Replication', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
